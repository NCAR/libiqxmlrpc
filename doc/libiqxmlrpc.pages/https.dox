/*!
\page https_server Writing XML-RPC HTTPS server

Libiqxmlrpc provides ability to run XML-RPC server over secure connection.
You just need Https_server_connection template parameter instead of
Http_server_connection:

\dontinclude https_server.cc
\skipline Server

\dontinclude server_general.h
\skipline Get_weather
\skipline public:
\until }

\dontinclude https_server.cc
\skipline main
\skipline {
\skipline try
\until ####EOF

See an entire example text \ref https_server_ex

\note Note that one must initialize SSL library to use HTTPS transport. 
There is global variable iqnet::ssl::ctx in underlying network library,
it must be initialized with appropriate iqnet::ssl::Ctx object (server-only 
orientedc ontext in our case).

\note You also may want to ignore \b SIGPIPE signal. HTTPS-related code of
library can cause a signal invocation.
*/


/*!
\page https_server_ex Https_server example
\e server_general.h
\include server_general.h
\e https_server.cc
\include https_server.cc
*/


/*!
\page https_client Writing XML-RPC HTTPS client
Use iqxmlrpc::Https_client_connection as template's parameter for 
iqxmlrpc::Client when you want to perform XML-RPC client's requests over HTTP.

\include https_client.cc

\note This example is pretty like in \ref http_client but here we must also 
initialize OpenSSL library. This can be achieved by assigning global variable 
iqnet::ssl::ctx with client-oriented context object.
*/
